# Tox is a generic virtualenv management and test command line tool. Its goal is to
# standardize testing in Python. We will be using it extensively in this course.

# Using Tox we can (on multiple operating systems):
# + Eliminate PYTHONPATH challenges when running scripts/tests
# + Eliminate virtualenv setup confusion
# + Streamline steps such as model training, model publishing


[tox]
envlist = train,unit_tests,typechecks,stylechecks
skipsdist = True

[testenv]
install_command = pip install {opts} {packages}
deps =
	-rrequirements/requirements.txt

setenv =
	PYTHONPATH=.

[testemv:train]
deps =
	{[testenv]deps}

# TODO: fix kaggle script
commands=
	python regression_model/train_pipeline.py


[testenv:unit_tests]
envdir = {toxworkdir}/unit_tests
deps =
	-rrequirements/test_requirements.txt

setenv =
	PYTHONPATH=.

passenv =
	KAGGLE_USERNAME
	KAGGLE_KEY

# TODO: fix kaggle script
commands=
	kaggle competitions download -c house-prices-advanced-regression-techniques -p gradient_boosting_model/datasets/
	unzip -o gradient_boosting_model/datasets/house-prices-advanced-regression-techniques.zip -d gradient_boosting_model/datasets
	mv gradient_boosting_model/datasets/train.csv gradient_boosting_model/datasets/houseprice.csv
	python gradient_boosting_model/train_pipeline.py
	pytest \
	-s \
	-vv \
	{posargs:tests/}


[testenv:typechecks]
envdir = {toxworkdir}/unit_tests

deps =
	{[testenv:unit_tests]deps}

commands = {posargs:mypy regression_model}


[testenv:stylechecks]
envdir = {toxworkdir}/unit_tests

deps =
	{[testenv:unit_tests]deps}

commands = {posargs:flake8 regression_model tests}


[flake8]
exclude = .git,env
max-line-length = 90