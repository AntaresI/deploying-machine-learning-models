# Tox is a generic virtualenv management and test command line tool. Its goal is to
# standardize testing in Python. We will be using it extensively in this course.

# Using Tox we can (on multiple operating systems):
# + Eliminate PYTHONPATH challenges when running scripts/tests
# + Eliminate virtualenv setup confusion
# + Streamline steps such as model training, model publishing

[tox]
envlist = regression_model
skipsdist = True

[testenv]
install_command = pip install {opts} {packages}
# We pass as dependencies the requirement file. Note that there is no space after the -r
deps =
	-rrequirements.txt

setenv =
	# The PYTHONPATH is set to be the current directory
	# Without using Tox, we would have to set the PYTHON path ourself
  	PYTHONPATH=.

# There are the commands that we are going to run
commands =
	python regression_model/train_pipeline.py
	# -s will allow to display the logs
	# pytest -s tests/
	pytest tests/

# This is a new environment: install_locally
[testenv:install_locally]
deps =
	# It has the same dependancies as the testenv environement
	{[testenv]deps}

setenv =
  	PYTHONPATH=.

commands =
	python regression_model/train_pipeline.py
	# sdist is to create the source distribution
	# bdist_wheel is to create the wheel distribution
	python setup.py sdist bdist_wheel
