version: 2
jobs:
  test_regression_model:
    working_directory: ~/project
    docker:
      - image: circleci/python:3.7.2
    steps:
      - checkout
      - run:
          name: Runnning tests
          command: |
            virtualenv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r packages/regression_model/requirements.txt
            chmod +x ./scripts/fetch_kaggle_dataset.sh
            ./scripts/fetch_kaggle_dataset.sh
            py.test -vv packages/regression_model/tests

  test_ml_api:
    working_directory: ~/project
    docker:
      - image: circleci/python:3.7.2
    steps:
      - checkout
      - run:
          name: Runnning tests
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r packages/ml_api/requirements.txt
            py.test -vv packages/ml_api/tests

  train_and_upload_regression_model:
    working_directory: ~/project
    docker:
      - image: circleci/python:3.7.2
    steps:
      - checkout
      - run: 
          name: Setup env
          command: |
            virtualenv venv
            . venv/bin/activate
            pip install -r packages/regression_model/requirements.txt
      - run: 
          name: Publish model
          command: |
            . venv/bin/activate
            chmod +x ./scripts/fetch_kaggle_dataset.sh ./scripts/publish_model.sh
            ./scripts/fetch_kaggle_dataset.sh
            PYTHONPATH=./packages/regression_model python3 packages/regression_model/regression_model/train_pipeline.py
            ./scripts/publish_model.sh ./packages/regression_model/

  section_9_differential_tests:
    <<: *defaults
    steps:
      - checkout
      - *prepare_venv
      - run:
          name: Capturing previous model predictions
          command: |
            . venv/bin/activate
            pip install -r packages/ml_api/diff_test_requirements.txt
            PYTHONPATH=./packages/ml_api python3 packages/ml_api/tests/capture_model_predictions.py
      - run:
          name: Runnning differential tests
          command: |
            . venv/bin/activate
            pip install -r packages/ml_api/requirements.txt
            py.test -vv packages/ml_api/tests -m differential

  section_10_deploy_to_heroku:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Deploy to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

  section_11_build_and_push_to_heroku_docker:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: docker login --username=$HEROKU_EMAIL --password=$HEROKU_API_KEY registry.heroku.com
      - run:
          name: Setup Heroku CLI
          command: |
            wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
      - run: 
          name: Build and Push Image
          command: |
            make build-ml-api-heroku push-ml-api-heroku
      - run: 
          name: Release to Heroku
          command: |
            heroku container:release web --app $HEROKU_APP_NAME

  section_12_publish_docker_image_to_aws:
    <<: *defaults
    working_directory: ~/project/packages/ml_models
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Publishing docker image to aws ECR
          command: |
            sudo pip install awscli
            eval $(aws ecr get-login --no-include-email --region us-east-1)
            make build-ml-api-aws tag-ml-api push-ml-api-aws
            aws ecs update-service --cluster ml-api-cluster --service custom-service --task-definition  first-run-task-definition --force-new-deployment

  section_13_train_and_upload_neural_network_model:
    docker:
      - image: circleci/python:3.6.4-stretch
    working_directory: ~/project
    steps:
      - checkout
      - *prepare_venv
      - run: 
          name: Install requirements
          command: |
            . venv/bin/activate
            pip install -r packages/neural_network_model/requirements.txt
      - run:
          name: Fetch Training data - 2GB
          command: |
            . venv/bin/activate
            chmod +x ./scripts/fetch_kaggle_large_dataset.sh
            ./scripts/fetch_kaggle_large_dataset.sh
      - run: 
          name: Train model
          command: |
            . venv/bin/activate
            PYTHONPATH=./packages/neural_network_model python3 packages/neural_network_model/neural_network_model/train_pipeline.py
      - run: 
          name: Publish model to Gemfury
          command: |
            . venv/bin/activate
            chmod +x ./scripts/publish_model.sh
            ./scripts/publish_model.sh ./packages/neural_network_model/

workflows:
  version: 2
  test-all:
    jobs:
      - test_regression_model
      - test_ml_api
      - train_and_upload_regression_model
      - test_ml_api:
          requires:
            - train_and_upload_regression_model
